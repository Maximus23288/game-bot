string: map;
int: l, i, j, x, y, k1, k2, k3, k4, k5, k6;
const int N;
string A[N][N];
int xbomb[N];
int ybomb[N];
int lbomb[N];
int xghost[N];
int yghost[N];
int lghost[N];
int xplayer[N];
int yplayer[N];
int lplayer[N];


l = sqrt(size(map));
for (i=0;i<l;i++){
  for (j=0;j<l;j++){
    A[i][j] = map[i*l+j];
  }
}
for (i=0;i<l;i++){
  for (j=0;j<l;j++){
    if (A[i][j]=="Ѡ"){
      send.up;
    }
    if ((A[i][j]=="☺") || (A[i][j]=="☻")){
      x = j;
      y = i;
    }
  }
}
for (i=0;i<l;i++){
  for (j=0;j<l;j++){
    if ((A[i][j]=="5") || (A[i][j]=="4") || (A[i][j]=="3") || (A[i][j]=="2") || (A[i][j]=="1"))
   {
     n = sqrt((x-j)*(x-j)+(y-i)*(y-i));
      if(n<5)
      {
         xbomb[k1]=j;
         ybomb[k1]=i;
         lbomb[k1]=n;
         k1++;
      }
     }
       if (A[i][j]=="&")
   {
     n = sqrt((x-j)*(x-j)+(y-i)*(y-i));
      if(n<5)
      {
         xghost[k2]=j;
         yghost[k2]=i;
         lghost[k2]=n;
         k2++;
      }
     }
        if ((A[i][j]=="♥") || (A[i][j])=="♠"))
   {
     n = sqrt((x-j)*(x-j)+(y-i)*(y-i));
      if(n<5)
      {
         xplayer[k3]=j;
         yplayer[k3]=i;
         lplayer[k3]=n;
         k3++;
      }
     }
   }
   
    
    
  }
}
